CRUD与实体对象的状态
	- 什么是瞬时对象
		* 所谓瞬时对象，即没有数据库标识，而且也没有跟任何hibernate session绑定的对象
		
	- 什么是持久化状态的对象
		* 所谓持久化状态的对象，实际上就是与某个hibernate session对象绑定，并且拥有了数据库标识
	- 持久化状态对象的特点
		* 处于持久化状态的对象，一定会有数据库标识
		* 处于持久化状态的对象，如果其状态发生变化，Hibernate将自动同步到数据库
		* 处于持久化状态的对象，对其调用save方法或update方法，毫无意义！！！！
		
	- 什么是离线对象
		* 如果一个持久化对象，其对应的hibernate session被关闭，这个持久化对象，就会成为离线对象
		* 或者，如果一个对象，只有数据库标识，而未与任何hibernate session绑定，那么，它也是一个离线对象
	- 离线对象的特点
		* 离线对象一定有数据库标识
		* 对于离线对象，即使其状态发生变化，其状态也不会自动被同步到数据库
		* 对于离线对象，如果其状态发生了变化，必须调用update方法，它才能够再次成为持久化对象，其状态将被自动
		  同步到数据库
		  
		  
	- save方法
		* 对于瞬时对象，save方法可以把瞬时对象变成一个持久化对象，分配相应的数据库标识（insert）
		* 对于离线对象，save方法可以把离线对象变成一个持久化对象，重新分配新的数据库标识（insert）
		* 对于持久化对象，save方法毫无意义！
	- update方法
		* 对于瞬时对象，update方法肯定会报错！
		* 对于离线对象，update方法可以把离线对象变成一个持久化对象，其数据库标识保持不变
		* 对于持久化对象，update方法毫无意义！
	- saveOrUpdate方法
		* 对于瞬时对象（没有数据库标识），saveOrUpdate方法可以把瞬时对象变成持久化对象，并分配数据库标识（insert）
		* 对于离线对象（已有数据库标识），saveOrUpdate方法，将自动把离线对象变成持久化对象，并保持数据库标识不变（update）
		* 对于持久化对象，saveOrUpdate方法，毫无意义！！
	- merge方法
		* 在同一个Session中，不允许同时存在两个具有相同数据库标识的同种类型的持久化对象
		* 对一个离线对象调用update方法，可以把这个离线对象变成持久化对象，但如果在当前session中已经存在
		  另外一个具有相同数据库标识的对象，那么必须对离线对象调用merge方法，merge方法用于把一个离线对象的
		  状态合并到与其有相同数据库标识的持久化对象中！
		  
-----------------------------------------------------------
	- get方法
			 * 1、Get方法，会马上发出select语句
			 * 2、Get方法的返回值的类型就是实体类型
			 * 3、Get方法查询的实体对象如果不存在，会返回null
			 * 4、懒加载机制对get方法不起作用！	
	- load方法
			 * 1、Load方法，hibernate不会马上发出select语句（懒加载,LazyLoad机制）
			 * 2、Load方法，加载的是一个实体对象的代理对象
			 * 3、Load方法，如果加载的对象不存在，仍然会返回代理对象，但是访问其中的属性（非id）的时候，会抛出ObjectNotFoundException异常！
			 * 4、如果取消了懒加载机制（在class上配置lazy="false"），load方法和get方法就没有区别了
-------------------------------------------------------------
	- Query
		* 通过session.createQuery(hql)，可以执行HQL语句的查询操作
	- delete方法
		* 通过session.delete(实体对象)，可以对实体对象执行删除操作
		